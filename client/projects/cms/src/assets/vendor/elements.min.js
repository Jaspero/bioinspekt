export default(()=>{const SELECTOR="jpe-blog";if(!!customElements.get(SELECTOR)){return}class el extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.innerHTML=`
				<style>
					:host {
						display: block;
					}
				</style>
			`}static get observedAttributes(){return["limit"]}async connectedCallback(){const limit=this.getAttribute("limit")||10;let res=await fetch(`https://firestore.googleapis.com/v1/projects/jaspero-jms/databases/(default)/documents:runQuery`,{method:"POST",body:JSON.stringify({structuredQuery:{from:[{collectionId:"posts"}],where:{fieldFilter:{field:{fieldPath:"active"},op:"EQUAL",value:{booleanValue:true}}}}})});res=await res.json();console.log(res)}attributeChangedCallback(){this.connectedCallback().catch(console.error)}createCard(blog){const el=document.createElement("div");el.classList.add("post");this.shadowRoot.appendChild(el)}}customElements.define(SELECTOR,el)})();export default(()=>{const SELECTOR="jpe-submit-button";if(!!customElements.get(SELECTOR)){return}class el extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.innerHTML=`<style>:host{display:block;}</style>`;this.output=document.createElement("button");this.output.setAttribute("type","submit");this.output.addEventListener("click",()=>{const form=this.closest("form");if(!form.reportValidity()){return}this.output.setAttribute("disabled","true");const data=new FormData(form);const typeMap={string:"stringValue",number:"doubleValue"};const fields={createdOn:{integerValue:Date.now().toString()}};data.forEach((value,key)=>{fields[key]={[typeMap[typeof value]]:value}});fetch(`https://firestore.googleapis.com/v1/projects/jaspero-jms/databases/(default)/documents/inquiries`,{method:"POST",body:JSON.stringify({fields:fields})}).finally(()=>this.output.removeAttribute("disabled"))});this.shadowRoot.appendChild(this.output)}static get observedAttributes(){return["label"]}connectedCallback(){this.output.innerText=this.getAttribute("label")}attributeChangedCallback(){this.connectedCallback()}}customElements.define(SELECTOR,el)})();